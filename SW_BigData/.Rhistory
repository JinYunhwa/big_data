library(viridis)
library(gganimate)
library(gifski)
library(av)
library(ggiraphExtra)
library(maps)
library(mapproj)
# ch1. 데이터를 불러온 후, 데이터 프레임 구조화하기
data("gapminder")
gapminder <- as.data.rame(gapminder)
# 2. gapminder 객체명을 입력하여 구조를 간단히 살피기
# ?를 앞에 붙이면 구조를 간단히 볼 수 있음.
gapminder
?gapminder
#?이거 아래 왜하는지 모름
options("scipen" = 100)
p <- ggplot(data=gapminder)
# 1인당 GDP(gdpPercap)와 기대수명(lifExp)을 살펴보자
g <- ggplot(data=gapminder,
mapping = aes(x=gdpPercap, y = lifeExp))
# 객체 p를 살펴보자
p
# 객체 p에 어떠한 정보가 담겨져 있는지 살펴보자
str(p)
p+geom_point()
p+geom_smooth()
p+geom_point() + p+geom_smooth()
)
)
p+geom_point()
p+geom_smooth()
p+geom_point() + p+geom_smooth()
# ch4. 축의 척도 변환을 해보자
p + geom_point() + geom_smooth(method = "gam") + scale_x_log10()
# 1인당 GDP(gdpPercap)와 기대수명(lifExp)을 살펴보자
g <- ggplot(data=gapminder,mapping = aes(x=gdpPercap, y = lifeExp))
# 1인당 GDP(gdpPercap)와 기대수명(lifExp)을 살펴보자
p <- ggplot(data=gapminder,
mapping = aes(x=gdpPercap, y = lifeExp))
# 객체 p를 살펴보자
p
# 객체 p에 어떠한 정보가 담겨져 있는지 살펴보자
str(p)
p+geom_point()
p+geom_smooth()
p+geom_point() + p+geom_smooth()
# ch4. 축의 척도 변환을 해보자
p + geom_point() + geom_smooth(method = "gam") + scale_x_log
p+geom_point()+geom_smooth()
# ch4. 축의 척도 변환을 해보자
p + geom_point() + geom_smooth(method = "gam") + scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=6)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=6)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth,
(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth,
(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth,
(method="lm",
color='orange',
se=FALSE,
size=4)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth,
(method="lm",
color='orange',
se=FALSE,
size=10)+scale_x_log10()
(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm", color='orange', se=FALSE, size=3)+scale_x_log10()
p <- ggplot(data=gapminder)
# 1인당 GDP(gdpPercap)와 기대수명(lifExp)을 살펴보자
p <- ggplot(data=gapminder,
mapping = aes(x=gdpPercap, y = lifeExp))
# 객체 p를 살펴보자
p
# 객체 p에 어떠한 정보가 담겨져 있는지 살펴보자
str(p)
p+geom_point()
p+geom_smooth()
p+geom_point()+geom_smooth()
# ch4. 축의 척도 변환을 해보자
p + geom_point() + geom_smooth(method = "gam") + scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm", color='orange', se=FALSE, size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm", color='orange', se=FALSE, size=3)+scale_x_log10()
library(tidyverse)
library(gapminder)
library(nord)
library(viridis)
library(gganimate)
library(gifski)
library(av)
library(ggiraphExtra)
library(maps)
library(mapproj)
# ch1. 데이터를 불러온 후, 데이터 프레임 구조화하기
data("gapminder")
gapminder <- as.data.rame(gapminder)
# 2. gapminder 객체명을 입력하여 구조를 간단히 살피기
# ?를 앞에 붙이면 구조를 간단히 볼 수 있음.
gapminder
?gapminder
#?이거 아래 왜하는지 모름
options("scipen" = 100)
p <- ggplot(data=gapminder)
# 1인당 GDP(gdpPercap)와 기대수명(lifExp)을 살펴보자
p <- ggplot(data=gapminder,
mapping = aes(x=gdpPercap, y = lifeExp))
# 객체 p를 살펴보자
p
# 객체 p에 어떠한 정보가 담겨져 있는지 살펴보자
str(p)
p+geom_point()
p+geom_smooth()
p+geom_point()+geom_smooth()
# ch4. 축의 척도 변환을 해보자
p + geom_point() + geom_smooth(method = "gam") + scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm",
color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm", color='orange',
se=FALSE,
size=3)+scale_x_log10()
p+geom_point(color="purple")+geom_smooth(method="lm", color='orange', se=FALSE, size=3)+scale_x_log10()
# ch5. 레이블을 추가하자
# x축, y축 명과 제목, 부제목, 캡션 등을 추가해보자
p+geom_point(alpha=0.3)+geom_smooth(method='gam')+scale_x_log10()+labs(x='GDP Per Capita', y = 'Life Expectancy in Years', title='경제성장률과 기대수명', subtitle ='데이터 포인트는 연도별', caption='자료:갭마인더더')
p1+geom_point(alpha=0.3)+geom_smooth(method = 'gam')+scale_x_log10()+
labs(x='GDP Per Capita', y='Life Expectancy in Years',
title = '대륙별 경제 성장률과 기대수명',
subtitle = '데이터 포인트는 연도별',
caption='자료:갭마인더')
p1 <- ggplot(data=gapminder, mapping=aes(x=gdpPercap, y=lifeExp, color=continent, size=pop, fill=continent))
p1+geom_point(alpha=0.3)+geom_smooth(method = 'gam')+scale_x_log10()+
labs(x='GDP Per Capita', y='Life Expectancy in Years',
title = '대륙별 경제 성장률과 기대수명',
subtitle = '데이터 포인트는 연도별',
caption='자료:갭마인더')
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE) + #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)
#그래프 타이틀
ggtitle('Now showing{closest_state}')
ani1
ani1
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE) + #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
#그래프 타이틀
ggtitle('Now showing{closest_state}')
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE) + #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
#그래프 타이틀
ggtitle('Now showing{closest_state}')
ani1
animate(ani1,renderer=av_renderer())
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
#그래프 타이틀
ggtitle('Now showing{closest_state}')
ani1
animate(ani1,renderer=av_renderer())
p1 <- ggplot(data=gapminder, mapping=aes(x=gdpPercap, y=lifeExp, color=continent, size=pop, fill=continent))
p1+geom_point(alpha=0.3)+geom_smooth(method = 'gam')+scale_x_log10()+
labs(x='GDP Per Capita', y='Life Expectancy in Years',
title = '대륙별 경제 성장률과 기대수명',
subtitle = '데이터 포인트는 연도별',
caption='자료:갭마인더')
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
#그래프 타이틀
ggtitle('Now showing{closest_state}')
ani1
animate(ani1,renderer=av_renderer())
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
View(iris_train)
View(p)
View(gapminder)
+facet_wrap(~ continent)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line()+
facet_wrap(~ continent)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line()+
facet_wrap(~ continent)
+geom_line()
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
geom_line()
q+geom_line()
facet_wrap(~ continent)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
facet_wrap(~ continent)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+geom_line()
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+geom_line()
facet_wrap(~ continent)
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+geom_line()+
facet_wrap(~ continent)
q+geom_line()
q+geom_line()
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent)
q+geom_line()
q
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent)
q
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5)
q
#지도 그리기
data(USArrests)
USArrests <- data.frame(USArrests)
View(USArrests)
str(USArrests)
crime <- rownames_to_column(USArrests, var="state")
str(crime)
crime$state <- tolower(crime$state)
head(crime)
ggChoropleth(data, aes(fill=,map_id,map=,interactive()))
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=state_map,interactive=T)
s
crime$state <- tolower(crime$state)
crime <- rownames_to_column(USArrests, var="state")
str(crime)
crime$state <- tolower(crime$state)
head(crime)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
#지도 그리기
library(maps)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
states_map <- map_data("state")
ggChoropleth(data=crime, aes(fill=Murder,map_id=state),
map=states_map,interactive=T)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5)
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5)
q
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5, color=continent)
q
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5, color=continent)
q
q <- ggplot(data=gapminder,
mapping=aes(x=year, y=gdpPercap,color=continent))+
geom_line(aes(group=country))+
facet_wrap(~ continent, ncol=5)
q
#한국의 경제 수준 그래프화
q1 <- ggplot(data=(gapminder %>% filter (country=='Korea, Rep.')), mapping=aes(x=year, y=gdpPercap))
q1+geom_bar(stat='identity')+
geom_smooth()+
geom_text(aes(y=gdpPercap,label=round(gdpPercap,1),vjust=-0.5))
q1
q1+geom_bar(stat='identity')+
geom_smooth()+
geom_text(aes(y=gdpPercap,label=round(gdpPercap,1),vjust=-0.5))
q1
q1+geom_bar(stat='identity')+
geom_smooth()+
geom_text(aes(y=gdpPercap,label=round(gdpPercap,1),vjust=-0.5))
#한국의 경제 수준 그래프화
q1 <- ggplot(data=(gapminder %>% filter (country=='Korea, Rep.')), mapping=aes(x=year, y=gdpPercap))
q1+geom_bar(stat='identity')+
geom_smooth()+
geom_text(aes(y=gdpPercap,label=round(gdpPercap,1),vjust=-0.5))
q
#한국의 경제 수준 그래프화
q1 <- ggplot(data=(gapminder %>% filter (country=='Korea, Rep.')), mapping=aes(x=year, y=gdpPercap))
q1+geom_bar(stat='identity')+
geom_smooth()+
geom_text(aes(y=gdpPercap,label=round(gdpPercap,1),vjust=-0.5))
#아시아의 국가별 경제수준 변화
q3 <- ggplot(data=(gapminder %>% filter(continent=="Asia")),
mapping = aes(reorder(country,gdpPercap),gdpPercap))
q3+geom_bar(stat='identity')
q3+geom_bar(stat='identity')+coord_flip()
#아시아 국가들의 1인당 GDP변화
ani_q3 <- q3+geom_bar(stat='identity')+coord_flip()+
theme_minimal()+ #배경
#애니메이션의 길이
transition_states(year,
state_length = 2)+
ggtitle('Now showing {closest_state}')
ani_q3
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
animate(ani1,renderer=av_renderer())
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
p1+geom_point(alpha=0.3)+geom_smooth(method = 'gam')+scale_x_log10()+
labs(x='GDP Per Capita', y='Life Expectancy in Years',
title = '대륙별 경제 성장률과 기대수명',
subtitle = '데이터 포인트는 연도별',
caption='자료:갭마인더')
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.position='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
#아시아의 국가별 경제수준 변화
q3 <- ggplot(data=(gapminder %>% filter(continent=="Asia")),
mapping = aes(reorder(country,gdpPercap),gdpPercap))
q3+geom_bar(stat='identity')
q3+geom_bar(stat='identity')+coord_flip()
#아시아 국가들의 1인당 GDP변화
ani_q3 <- q3+geom_bar(stat='identity')+coord_flip()+
theme_minimal()+ #배경
#애니메이션의 길이
transition_states(year,
state_length = 2)+
ggtitle('Now showing {closest_state}')
ani_q3
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.pposition='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
ani1
warnings()
#R을 활용한 애니메이션
ani1 <- p1+geom_point(alpha=0.5)+
scale_color_viridis(option="C", discrete = TRUE)+ #색상
scale_x_log10()+
theme_minimal()+ #배경
theme(legend.position='right')+ #범례위치
#애니메이션길이
transition_states(year,
state_length = 1)+
ggtitle('Now showing{closest_state}')
ani1
